{
    "swagger": "2.0",
    "info": {
        "description": "API for TikTok arena application",
        "title": "TikTok arena API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user with given credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Data to login user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success",
                        "schema": {
                            "$ref": "#/definitions/models.UserAuthDetails"
                        }
                    },
                    "400": {
                        "description": "Error logging in",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register new user with given credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Data to register user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Register success",
                        "schema": {
                            "$ref": "#/definitions/models.UserAuthDetails"
                        }
                    },
                    "400": {
                        "description": "Failed to register user",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        },
        "/auth/whoami": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get current user id and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticated user details",
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/models.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Error getting user data",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        },
        "/tournament": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new tournament for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Create new tournament",
                "parameters": [
                    {
                        "description": "Data to create tournament",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTournament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament created",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    },
                    "400": {
                        "description": "Error during tournament creation",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        },
        "/tournament/{tournamentId}": {
            "get": {
                "description": "Get tournament details by its id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Tournament details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament id",
                        "name": "tournamentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament",
                        "schema": {
                            "$ref": "#/definitions/models.Tournament"
                        }
                    },
                    "400": {
                        "description": "Tournament not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        },
        "/tournament/{tournamentId}/tiktoks": {
            "get": {
                "description": "Get tournament tiktoks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournament"
                ],
                "summary": "Tournament tiktoks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament id",
                        "name": "tournamentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament tiktoks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tiktok"
                            }
                        }
                    },
                    "400": {
                        "description": "Tournament not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponseType"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.MessageResponseType": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.CreateTiktok": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "models.CreateTournament": {
            "type": "object",
            "required": [
                "name",
                "size",
                "tiktoks"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tiktoks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CreateTiktok"
                    }
                }
            }
        },
        "models.LoginInput": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterInput": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Tiktok": {
            "type": "object",
            "properties": {
                "avgPoints": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "tournament": {
                    "$ref": "#/definitions/models.Tournament"
                },
                "tournamentID": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "wins": {
                    "type": "integer"
                }
            }
        },
        "models.Tournament": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserAuthDetails": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}